import Head from "next/head";
import {
  FaSearch,
  FaUser,
  FaSignOutAlt,
  FaBuilding,
  FaPeopleArrows,
  FaScrewdriver,
} from "react-icons/fa";
import { useRouter } from "next/router";
import { useContext, useEffect, useState } from "react";
import Cookies from "universal-cookie";
import Companies from "../components/companies";
import CompanyInfo from "../components/companyInfo";
import Account from "../components/account";
import EmployeeInfo from "../components/employeeInfo";
import UnderDevelopment from "../components/underDevelopment";
import { RESPONSE_LIMIT_DEFAULT } from "next/dist/server/api-utils";
import Employees from "../components/employees";
import Custom500 from "./500";
import Custom401 from "./401";

const activateCompanies = (setter) => {
  setter("companies");
};
const activateCompany = (setter) => {
  setter("company");
};

const activateAccount = (setter) => {
  setter("account");
};
const activateDevelopment = (setter) => {
  setter("dev");
};
const activateEmployees = (setter) => {
  setter("employees");
};

export async function getServerSideProps({ res, req }) {
  const cookies = new Cookies(req.headers.cookie);

  let token = "";

  token = cookies.get("Token_cookie");

  let url_companies = "http://localhost:8080/company?page=0&size=4";

  let options_companies = {
    method: "GET",
    headers: {
      Authorization: "Bearer " + token,
    },
  };

  const response_companies = await fetch(url_companies, options_companies);
  const statusCode_companies = response_companies.status;
  let data_companies;
  if (statusCode_companies === 200) {
    data_companies = await response_companies.json();
  } else {
    data_companies = "[]";
  }

  let url_employees = "http://localhost:8080/employee?page=0&size=3";

  let options_employees = {
    method: "GET",
    headers: {
      Authorization: "Bearer " + token,
    },
  };

  let data_employees;
  const response_employees = await fetch(url_employees, options_employees);
  const statusCode_employees = response_employees.status;
  if (statusCode_employees === 200) {
    data_employees = await response_employees.json();
  } else {
    data_employees = "[]";
  }

  return {
    props: {
      data_companies,
      statusCode_companies,
      data_employees,
      statusCode_employees,
    }, // will be passed to the page component as props
  };
}

export default function Home({
  data_companies,
  statusCode_companies,
  data_employees,
  statusCode_employees,
}) {
  const router = useRouter();
  const [active_comp, setComp] = useState("companies");
  const [companyData, setCompanyData] = useState();
  const [EmployeePrev, setEmployeePrev] = useState("employees");
  const [EmployeeData, setEmployeeData] = useState();

  console.log(data_companies);

  if (statusCode_companies === 200) {
    return (
      <div>
        <Head>
          <title>Companies Service</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="h-screen flex justify-start overflow-y-hidden ">
          <div className=" h-screen px-4 pt-8 bg-cyan-600 flex justify-between flex-col w-60 ">
            {" "}
            {/* This is the side bar  */}
            <div className="flex justify-center items-center">
              <FaUser className="text-white mr-3" />
              <a
                href="#"
                onClick={() => {
                  activateAccount(setComp);
                }}
                className="text-white font-bold"
              >
                My Account
              </a>
            </div>
            <div className="flex-row justify-center items-center">
              <div className="flex justify-center items-center mb-3">
                <FaBuilding className="text-white mr-3" />
                <a
                  href="#"
                  onClick={() => {
                    activateCompanies(setComp);
                  }}
                  className="text-white font-bold"
                >
                  Companies
                </a>
              </div>

              <div className="flex justify-center items-center mb-3">
                <FaPeopleArrows className="text-white mr-3" />
                <a
                  href="#"
                  onClick={() => {
                    activateEmployees(setComp);
                  }}
                  className="text-white font-bold"
                >
                  Employees
                </a>
              </div>

              <div className="flex justify-center items-center mb-3">
                <FaScrewdriver className="text-white mr-3" />
                <a
                  href="#"
                  onClick={() => {
                    activateDevelopment(setComp);
                  }}
                  className="text-white font-bold"
                >
                  Settings
                </a>
              </div>
            </div>
            <a
              href="http://localhost:3000"
              className="text-white font-bold flex justify-center
            items-center mb-5 border-2 rounded-full p-2
            hover:text-cyan-600 hover:bg-white"
            >
              Sign Out
            </a>
          </div>

          {/* This is the main division */}
          <div className="flex-1 bg-gray-100 p-5 h-screen">
            <p className="font-bold mb-5">
              {" "}
              <span className="text-cyan-600">Companies</span> Service
            </p>

            {/* Division were the main components are placed */}
            <div className="bg-white rounded-2xl items-center justify-start p-5 shadow-2xl flex flex-col h-[85vh] overflow-y-scroll">
              {active_comp === "companies" && (
                <Companies
                  data={data_companies}
                  setComp={setComp}
                  setData={setCompanyData}
                />
              )}
              {active_comp === "company" && (
                <CompanyInfo
                  setComp={setComp}
                  company={companyData}
                  setEmployeePrev={setEmployeePrev}
                  setEmployee={setEmployeeData}
                />
              )}
              {active_comp === "employee" && (
                <EmployeeInfo
                  setComp={setComp}
                  prev={EmployeePrev}
                  employee={EmployeeData}
                  setCompanyData={setCompanyData}
                  company={companyData}
                />
              )}
              {active_comp === "account" && <Account />}
              {active_comp === "dev" && <UnderDevelopment />}
              {active_comp === "employees" && (
                <Employees
                  data={data_employees}
                  setComp={setComp}
                  setEmployeePrev={setEmployeePrev}
                  setEmployee={setEmployeeData}
                />
              )}
            </div>
          </div>
        </main>
      </div>
    );
  } else if (statusCode_companies === 401 || statusCode_employees === 401) {
    return <Custom401 />;
  } else {
    return <Custom500 />;
  }
}
